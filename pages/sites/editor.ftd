-- import: ui.fifthtry.com/records/sites as sites-records

-- import: ui.fifthtry.com/components/sites/editor/browser
-- import: ui.fifthtry.com/components/sites/editor/edit-ui
-- import: ui.fifthtry.com/components/sites/editor/create-file-ui
-- import: ui.fifthtry.com/records/user-data as ud
-- import: ui.fifthtry.com/components/sites/page as p
-- import: ui.fifthtry.com/utils

-- import: ui.fifthtry.com/actions/sites/editor/open-file
-- import: ui.fifthtry.com/actions/sites/editor/save-file
-- import: ui.fifthtry.com/actions/sites/editor/delete-file
-- import: ui.fifthtry.com/actions/sites/editor/create-file
-- import: ui.fifthtry.com/site-data






-- component page:
module site-data: site-data
ud.user-data user-data:
sites-records.site-common-data site:
string dashboard-url:
sites-records.editor-data data:
module open-file: open-file
module save-file: save-file
module delete-file: delete-file
module create-file: create-file
string $header-title: *$page.data.current-file.full-name
optional string top-message:
boolean $edit: false
optional string $content:
boolean $create: false

-- p.page:
site-data: $page.site-data
user-data: $page.user-data
site: $page.site
current-page: editor
dashboard-url: $page.dashboard-url
top-message: $page.top-message

    -- browser.browser:
    open-file: $page.open-file
    delete-file: $page.delete-file
    data: $page.data
    site: $page.site
    $header-title: $page.header-title
    $create: $page.create
    $edit: $page.edit
    if: { !page.create && !page.edit }

    -- edit-ui.edit-ui:
    open-file: $page.open-file
    save-file: $page.save-file
    current-file: $page.data.current-file
    site: $page.site
    $edit: $page.edit
    $content: $page.content
    header-title: $page.header-title
    if: { page.edit && page.data.current-file.text != NULL }

    -- create-file-ui.create-file-ui:
    create-file: $page.create-file
    site: $page.site
    $create: $page.create
    if: { page.create }

    -- show-error:
    open-file: $page.open-file
    save-file: $page.save-file
    delete-file: $page.delete-file
    create-file: $page.create-file

-- end: p.page

-- end: page






-- component show-error:
module open-file: open-file
module save-file: save-file
module delete-file: delete-file
module create-file: create-file

-- ds.column:

    -- ftd.text: $show-error.open-file.open-error
    $on-click-outside$: $utils.set-null($var = $show-error.open-file.open-error)
    if: { show-error.open-file.open-error != NULL }
    color: red
    role: $inherited.types.copy-small

    -- ftd.text: $show-error.save-file.save-error
    $on-click-outside$: $utils.set-null($var = $show-error.save-file.save-error)
    if: { show-error.save-file.save-error != NULL }
    color: red
    role: $inherited.types.copy-small

    -- ftd.text: $show-error.delete-file.delete-error
    $on-click-outside$: $utils.set-null($var = $show-error.delete-file.delete-error)
    if: { show-error.delete-file.delete-error != NULL }
    color: red
    role: $inherited.types.copy-small

    -- ftd.text: $show-error.create-file.create-error
    $on-click-outside$: $utils.set-null($var = $show-error.create-file.create-error)
    if: { show-error.create-file.create-error != NULL }
    color: red
    role: $inherited.types.copy-small

-- end: ds.column

-- end: show-error

